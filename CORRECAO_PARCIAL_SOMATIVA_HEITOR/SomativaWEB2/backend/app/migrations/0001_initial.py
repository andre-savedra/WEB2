# Generated by Django 5.0.5 on 2024-06-11 01:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioCustomizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='endereço de email')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('endereco', models.CharField(max_length=200)),
                ('cpf', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Livros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=150)),
                ('paginas', models.IntegerField()),
                ('descricao', models.CharField(max_length=500)),
                ('formato', models.CharField(choices=[('E', 'Ebook'), ('F', 'FÍSICO')], max_length=15)),
                ('status', models.CharField(choices=[('P', 'PENDENTE'), ('A', 'APROVADO'), ('C', 'CANCELADO')], default=[('P', 'PENDENTE'), ('A', 'APROVADO'), ('C', 'CANCELADO')], max_length=15)),
                ('edicao', models.IntegerField()),
                ('autor', models.CharField(max_length=150)),
                ('anoPublicacao', models.CharField(max_length=4)),
                ('quantidade', models.IntegerField()),
                ('valor', models.DecimalField(decimal_places=2, max_digits=6)),
                ('fotoCapa', models.CharField(max_length=1000)),
                ('avaliacao', models.DecimalField(decimal_places=1, max_digits=3)),
                ('categoriFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categoriaLivro', to='app.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Emprestimos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataEmprestimo', models.DateField(auto_now_add=True)),
                ('dataPrevista', models.DateField()),
                ('dataDevolucao', models.DateField()),
                ('usuarioFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emprestimoUsuario', to=settings.AUTH_USER_MODEL)),
                ('livroFK', models.ManyToManyField(to='app.livros')),
            ],
        ),
    ]
